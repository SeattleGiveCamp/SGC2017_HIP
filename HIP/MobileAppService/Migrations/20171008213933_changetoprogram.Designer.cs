// <auto-generated />
using HIP.MobileAppService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HIP.MobileAppService.Migrations
{
    [DbContext(typeof(HIPContext))]
    [Migration("20171008213933_changetoprogram")]
    partial class changetoprogram
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HIP.MobileAppService.Models.EventBlackout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan>("BlackoutTime");

                    b.Property<DateTime>("End");

                    b.Property<string>("EventModelId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("EventModelId");

                    b.ToTable("EventBlackouts");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.EventCheckInModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CheckinDate");

                    b.Property<string>("EventId");

                    b.Property<double>("HourCount");

                    b.Property<string>("ParentUserEmail");

                    b.Property<string>("UserEmail");

                    b.HasKey("Id");

                    b.ToTable("EventCheckIns");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.EventModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.EventOccurrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("End");

                    b.Property<string>("EventId");

                    b.Property<string>("EventModelId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("EventModelId");

                    b.ToTable("EventOccurences");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.ProgramType", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EventModelId");

                    b.HasKey("Name");

                    b.HasIndex("EventModelId");

                    b.ToTable("ProgramTypes");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.RecurringEventOccurrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan>("EndTime");

                    b.Property<string>("EventModelId");

                    b.Property<DateTime>("RecurrenceEnd");

                    b.Property<DateTime>("RecurrenceStart");

                    b.Property<int>("RecurringDay");

                    b.Property<TimeSpan>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("EventModelId");

                    b.ToTable("RecurringEventOccurrences");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.UserModel", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("ParentEmail");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.EventBlackout", b =>
                {
                    b.HasOne("HIP.MobileAppService.Models.EventModel")
                        .WithMany("Blackouts")
                        .HasForeignKey("EventModelId");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.EventModel", b =>
                {
                    b.HasOne("HIP.MobileAppService.Models.ProgramType", "Type")
                        .WithMany()
                        .HasForeignKey("Name");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.EventOccurrence", b =>
                {
                    b.HasOne("HIP.MobileAppService.Models.EventModel")
                        .WithMany("Occurrences")
                        .HasForeignKey("EventModelId");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.ProgramType", b =>
                {
                    b.HasOne("HIP.MobileAppService.Models.EventModel")
                        .WithMany("ProgramCategories")
                        .HasForeignKey("EventModelId");
                });

            modelBuilder.Entity("HIP.MobileAppService.Models.RecurringEventOccurrence", b =>
                {
                    b.HasOne("HIP.MobileAppService.Models.EventModel")
                        .WithMany("RecurringOccurrences")
                        .HasForeignKey("EventModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
